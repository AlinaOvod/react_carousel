{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","setNewState","useState","currentIndex","setCurrentIndex","stepWidth","visibleFrame","totalWidth","length","isDisabledPrev","isDisabledNext","className","htmlFor","id","name","type","defaultValue","min","max","onChange","event","currentTarget","value","checked","classNames","onClick","prevCurrentIndex","newCurrentIndex","style","height","width","transform","transitionDuration","map","image","index","src","alt","App","initialImages","state","setState","newState","prevState","ReactDOM","render","document","getElementById"],"mappings":"kPAwMeA,EAzLmB,SAAC,GAQ5B,IAPLC,EAOI,EAPJA,OACAC,EAMI,EANJA,KACAC,EAKI,EALJA,UACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,kBACAC,EAEI,EAFJA,SACAC,EACI,EADJA,YAEA,EAAwCC,mBAAiB,GAAzD,mBAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAYP,EAAYF,EACxBU,EAAeT,EAAYC,EAC3BS,EAAaZ,EAAOa,OAASV,EAC7BW,EAAkC,IAAjBN,EACjBO,EAAiBP,MAAmBI,EAAaF,GAqCvD,OACE,sBAAKM,UAAU,WAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,wBAAOA,UAAU,qBAAqBC,QAAQ,SAA9C,UACE,mBAAGD,UAAU,kBAAb,mBACA,uBACEE,GAAG,SACHF,UAAU,kBACVG,KAAK,OACLC,KAAK,SACLC,aAAcpB,EACdqB,IAAI,IACJC,IAAKvB,EAAOa,OACZW,SAAU,SAACC,GACTnB,EAAY,CAAEL,MAAOwB,EAAMC,cAAcC,cAI/C,wBAAOX,UAAU,qBAAqBC,QAAQ,UAA9C,UACE,mBAAGD,UAAU,kBAAb,yBACA,uBACEE,GAAG,UACHF,UAAU,kBACVI,KAAK,SACLD,KAAK,YACLE,aAAcnB,EACdoB,IAAI,IACJC,IAAKvB,EAAOa,OACZW,SAAU,SAACC,GACTnB,EAAY,CAAEJ,WAAYuB,EAAMC,cAAcC,cAIpD,wBAAOX,UAAU,qBAAqBC,QAAQ,SAA9C,UACE,mBAAGD,UAAU,kBAAb,yBACA,uBACEE,GAAG,SACHF,UAAU,kBACVI,KAAK,SACLD,KAAK,YACLE,aAAclB,EACdmB,IAAI,MACJC,IAAI,MACJtB,KAAK,KACLuB,SAAU,SAACC,GACTnB,EAAY,CAAEH,WAAYsB,EAAMC,cAAcC,cAIpD,wBAAOX,UAAU,qBAAjB,UACE,mBAAGA,UAAU,kBAAb,iCACA,uBACEA,UAAU,kBACVI,KAAK,SACLD,KAAK,oBACLE,aAAcjB,EACdH,KAAK,KACLuB,SAAU,SAACC,GACTnB,EAAY,CAAEF,mBAAoBqB,EAAMC,cAAcC,cAI5D,wBAAOX,UAAU,qBAAjB,UACE,mBAAGA,UAAU,kBAAb,uBACA,uBACEA,UAAU,kBACVI,KAAK,WACLD,KAAK,WACLE,aAAY,UAAKhB,GACjBmB,SAAU,SAACC,GACTnB,EAAY,CAAED,SAAUoB,EAAMC,cAAcE,mBAMpD,sBAAKZ,UAAU,oBAAf,UACE,wBACEI,KAAK,SACLJ,UAAWa,IAAW,uCAAwC,CAC5D,6BAA8BxB,EAAW,GAAKS,IAEhDgB,QAlGgB,WACtBrB,GAAgB,SAACsB,GACf,IAAIC,EAAkBD,EAAmBrB,EAUzC,OARIL,GAA6B,IAAjBG,GACdC,GAAiBG,EAAaD,IAG3BqB,GAAmB,IACtBA,EAAkBD,GAAoBA,GAGjCC,MAiFL,iBAUA,qBACEhB,UAAU,mBACViB,MAAO,CACLC,OAAO,GAAD,OAAK/B,EAAL,MACNgC,MAAM,GAAD,OAAKxB,EAAL,OAJT,SAOE,oBACEK,UAAU,iBACViB,MAAO,CACLE,MAAM,GAAD,OAAKvB,EAAL,MACLwB,UAAU,cAAD,OAAgB5B,EAAhB,OACT6B,mBAAmB,GAAD,OAAKjC,EAAL,OALtB,SAQGJ,EAAOsC,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAIxB,UAAU,iBAAd,SACE,qBACEyB,IAAKF,EACLvB,UAAU,kBACV0B,IAAG,UAAKF,EAAQ,GAChBL,MAAOhC,EACP8B,MAAO,CACLE,MAAM,GAAD,OAAKhC,EAAL,MACL+B,OAAO,GAAD,OAAK/B,EAAL,UARwBoC,UAe1C,wBACEnB,KAAK,SACL,UAAQ,OACRJ,UAAWa,IAAW,uCAAwC,CAC5D,6BAA8BxB,EAAW,GAAKU,IAEhDe,QA/JgB,WACtBrB,GAAgB,SAACsB,GACf,IAAIC,EAAkBD,EAAmBrB,GAErCL,GAAYG,EAAeG,KAAkBC,GAC/CH,EAAgB,GAGduB,EAAkBpB,GAAcD,KAIlCqB,EAAkBD,GAHAC,EAAkBpB,GACjBT,GAAaD,EAAYD,IAK9C,OAAO+B,MA0IL,wBCpIOW,EAhDO,WACpB,IAAMC,EAAgB,CACpB,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAGF,EAA0BrC,mBAAgB,CACxCP,OAAQ4C,EACR3C,KAAM,EACNC,UAAW,EACXC,UAAW,IACXC,kBAAmB,IACnBC,UAAU,IANZ,mBAAOwC,EAAP,KAAcC,EAAd,KAgBA,OACE,sBAAK9B,UAAU,MAAf,UACE,qBAAIA,UAAU,aAAa,UAAQ,QAAnC,2BACiB4B,EAAc/B,OAD/B,aAGA,cAAC,EAAD,CACEb,OAAQ6C,EAAM7C,OACdC,KAAM4C,EAAM5C,KACZC,UAAW2C,EAAM3C,UACjBC,UAAW0C,EAAM1C,UACjBC,kBAAmByC,EAAMzC,kBACzBC,SAAUwC,EAAMxC,SAChBC,YAnBc,SAACyC,GACnBD,GAAS,SAACE,GAAD,mBAAC,eACLA,GACAD,aC5BTE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.8a2e1995.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport classNames from \"classnames\";\nimport \"./Carousel.scss\";\nimport { State } from \"../types/State\";\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n  setNewState: (newState: Partial<State>) => void;\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n  setNewState,\n}) => {\n  const [currentIndex, setCurrentIndex] = useState<number>(0);\n\n  const stepWidth = itemWidth * step;\n  const visibleFrame = frameSize * itemWidth;\n  const totalWidth = images.length * itemWidth;\n  const isDisabledPrev = currentIndex === 0;\n  const isDisabledNext = currentIndex === -(totalWidth - stepWidth);\n\n  const handleNextClick = () => {\n    setCurrentIndex((prevCurrentIndex) => {\n      let newCurrentIndex = prevCurrentIndex - stepWidth;\n\n      if (infinite && currentIndex - visibleFrame === -totalWidth) {\n        setCurrentIndex(0);\n      }\n\n      if (newCurrentIndex + totalWidth <= visibleFrame) {\n        const firstPart = newCurrentIndex + totalWidth;\n        const secondPart = itemWidth * (frameSize - step);\n\n        newCurrentIndex = prevCurrentIndex - firstPart + secondPart;\n      }\n\n      return newCurrentIndex;\n    });\n  };\n\n  const handlePrevClick = () => {\n    setCurrentIndex((prevCurrentIndex) => {\n      let newCurrentIndex = prevCurrentIndex + stepWidth;\n\n      if (infinite && currentIndex === 0) {\n        setCurrentIndex(-totalWidth + visibleFrame);\n      }\n\n      if (-newCurrentIndex <= 0) {\n        newCurrentIndex = prevCurrentIndex + -prevCurrentIndex;\n      }\n\n      return newCurrentIndex;\n    });\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <div className=\"Carousel__properties\">\n        <label className=\"Carousel__property\" htmlFor=\"stepId\">\n          <p className=\"Carousel__title\">Step:</p>\n          <input\n            id=\"stepId\"\n            className=\"Carousel__input\"\n            name=\"step\"\n            type=\"number\"\n            defaultValue={step}\n            min=\"1\"\n            max={images.length}\n            onChange={(event) => {\n              setNewState({ step: +event.currentTarget.value });\n            }}\n          />\n        </label>\n        <label className=\"Carousel__property\" htmlFor=\"frameId\">\n          <p className=\"Carousel__title\">Frame Size:</p>\n          <input\n            id=\"frameId\"\n            className=\"Carousel__input\"\n            type=\"number\"\n            name=\"frameSize\"\n            defaultValue={frameSize}\n            min=\"1\"\n            max={images.length}\n            onChange={(event) => {\n              setNewState({ frameSize: +event.currentTarget.value });\n            }}\n          />\n        </label>\n        <label className=\"Carousel__property\" htmlFor=\"itemId\">\n          <p className=\"Carousel__title\">Item Width:</p>\n          <input\n            id=\"itemId\"\n            className=\"Carousel__input\"\n            type=\"number\"\n            name=\"itemWidth\"\n            defaultValue={itemWidth}\n            min=\"130\"\n            max=\"260\"\n            step=\"10\"\n            onChange={(event) => {\n              setNewState({ itemWidth: +event.currentTarget.value });\n            }}\n          />\n        </label>\n        <label className=\"Carousel__property\">\n          <p className=\"Carousel__title\">Animation Duration:</p>\n          <input\n            className=\"Carousel__input\"\n            type=\"number\"\n            name=\"animationDuration\"\n            defaultValue={animationDuration}\n            step=\"50\"\n            onChange={(event) => {\n              setNewState({ animationDuration: +event.currentTarget.value });\n            }}\n          />\n        </label>\n        <label className=\"Carousel__property\">\n          <p className=\"Carousel__title\">Infinite:</p>\n          <input\n            className=\"Carousel__input\"\n            type=\"Checkbox\"\n            name=\"Infinite\"\n            defaultValue={`${infinite}`}\n            onChange={(event) => {\n              setNewState({ infinite: event.currentTarget.checked });\n            }}\n          />\n        </label>\n      </div>\n\n      <div className=\"Carousel__wrapper\">\n        <button\n          type=\"button\"\n          className={classNames(\"Carousel__button Carousel__button--1\", {\n            \"Carousel__button--disabled\": infinite ? \"\" : isDisabledPrev,\n          })}\n          onClick={handlePrevClick}\n        >\n          &lt;&lt;&lt;\n        </button>\n\n        <div\n          className=\"Carousel__images\"\n          style={{\n            height: `${itemWidth}px`,\n            width: `${visibleFrame}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              width: `${totalWidth}px`,\n              transform: `translateX(${currentIndex}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => (\n              <li className=\"Carousel__item\" key={image}>\n                <img\n                  src={image}\n                  className=\"Carousel__image\"\n                  alt={`${index + 1}`}\n                  width={itemWidth}\n                  style={{\n                    width: `${itemWidth}px`,\n                    height: `${itemWidth}px`,\n                  }}\n                />\n              </li>\n            ))}\n          </ul>\n        </div>\n        <button\n          type=\"button\"\n          data-cy=\"next\"\n          className={classNames(\"Carousel__button Carousel__button--2\", {\n            \"Carousel__button--disabled\": infinite ? \"\" : isDisabledNext,\n          })}\n          onClick={handleNextClick}\n        >\n          &gt;&gt;&gt;\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from \"react\";\nimport \"./App.scss\";\nimport Carousel from \"./components/Carousel\";\nimport { State } from \"./types/State\";\n\nconst App: React.FC = () => {\n  const initialImages = [\n    \"./img/1.png\",\n    \"./img/2.png\",\n    \"./img/3.png\",\n    \"./img/4.png\",\n    \"./img/5.png\",\n    \"./img/6.png\",\n    \"./img/7.png\",\n    \"./img/8.png\",\n    \"./img/9.png\",\n    \"./img/10.png\",\n  ];\n\n  const [state, setState] = useState<State>({\n    images: initialImages,\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  });\n\n  const setNewState = (newState: Partial<State>): void => {\n    setState((prevState) => ({\n      ...prevState,\n      ...newState,\n    }));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\" data-cy=\"title\">\n        Carousel with {initialImages.length} images\n      </h1>\n      <Carousel\n        images={state.images}\n        step={state.step}\n        frameSize={state.frameSize}\n        itemWidth={state.itemWidth}\n        animationDuration={state.animationDuration}\n        infinite={state.infinite}\n        setNewState={setNewState}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}